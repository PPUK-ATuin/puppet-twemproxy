#!/bin/sh
### BEGIN INIT INFO
# Provides:          nutcracker
# Required-Start:    $network $remote_fs $local_fs
# Required-Stop:     $network $remote_fs $local_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Stop/start nutcracker <%= name %>
### END INIT INFO

PATH=/sbin:/usr/sbin:/bin:/usr/bin
DESC=nutcracker
NAME=nutcracker
CONFFILE=/etc/nutcracker/<%= name %>.yml
LOGFILE=/var/log/nutcracker/<%= name %>.log
DAEMON=/usr/local/bin/nutcracker
PIDFILE=/var/run/nutcracker/$NAME.pid
RUNDIR=$(dirname ${PIDFILE})
DAEMON_ARGS="-c $CONFFILE -o $LOGFILE -p $PIDFILE -s <%= statsport %> -d"
SCRIPTNAME=/etc/init.d/$NAME

[ -x $DAEMON ] || exit 0

[ -r /etc/default/$NAME ] && . /etc/default/$NAME

. /lib/init/vars.sh

. /lib/lsb/init-functions

if [ -r /etc/default/$NAME ]
then
	. /etc/default/$NAME
fi

case "$1" in
  start)
	echo -n "Starting $DESC: "
	mkdir -p $RUNDIR
	touch $PIDFILE
	chmod 755 $RUNDIR

	if [ -n "$ULIMIT" ]
	then
		ulimit -n $ULIMIT
	fi

	if start-stop-daemon --start --quiet --umask 007 --pidfile $PIDFILE --exec $DAEMON -- $DAEMON_ARGS
	then
		echo "$NAME."
	else
		echo "failed"
	fi
	;;
  stop)
	echo -n "Stopping $DESC: "
	if start-stop-daemon --stop --retry forever/TERM/1 --quiet --oknodo --pidfile $PIDFILE --exec $DAEMON
	then
		echo "$NAME."
	else
		echo "failed"
	fi
	rm -f $PIDFILE
	sleep 1
	;;

  restart|force-reload)
	${0} stop
	${0} start
	;;

  status)
	echo -n "$DESC is "
	if start-stop-daemon --stop --quiet --signal 0 --name ${NAME} --pidfile ${PIDFILE}
	then
		echo "running"
	else
		echo "not running"
		exit 1
	fi
	;;

  *)
	echo "Usage: /etc/init.d/$NAME {start|stop|restart|force-reload}" >&2
	;;
esac

exit $RETVAL
